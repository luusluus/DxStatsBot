// <auto-generated />
using System;
using DXStats.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DXStats.Migrations
{
    [DbContext(typeof(DxStatsDbContext))]
    [Migration("20210103223051_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.3");

            modelBuilder.Entity("DXStats.Domain.Entity.Coin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("DXStats.Domain.Entity.DayCompletedOrders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoinId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SnapshotId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.HasIndex("SnapshotId");

                    b.ToTable("DayCompletedOrders");
                });

            modelBuilder.Entity("DXStats.Domain.Entity.DayVolume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BLOCK")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("CoinId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CustomCoin")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfTrades")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SnapshotId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("USD")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.HasIndex("SnapshotId");

                    b.ToTable("DayVolumes");
                });

            modelBuilder.Entity("DXStats.Domain.Entity.Snapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Snapshots");
                });

            modelBuilder.Entity("DXStats.Domain.Entity.DayCompletedOrders", b =>
                {
                    b.HasOne("DXStats.Domain.Entity.Coin", "Coin")
                        .WithMany()
                        .HasForeignKey("CoinId");

                    b.HasOne("DXStats.Domain.Entity.Snapshot", "Snapshot")
                        .WithMany("DayCompletedOrders")
                        .HasForeignKey("SnapshotId");
                });

            modelBuilder.Entity("DXStats.Domain.Entity.DayVolume", b =>
                {
                    b.HasOne("DXStats.Domain.Entity.Coin", "Coin")
                        .WithMany()
                        .HasForeignKey("CoinId");

                    b.HasOne("DXStats.Domain.Entity.Snapshot", "Snapshot")
                        .WithMany("DayVolumes")
                        .HasForeignKey("SnapshotId");
                });
#pragma warning restore 612, 618
        }
    }
}
