// <auto-generated />
using System;
using DXStats.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DXStats.Migrations
{
    [DbContext(typeof(DxStatsDbContext))]
    [Migration("20210122211534_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.3");

            modelBuilder.Entity("DXStats.Domain.Entity.Coin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfTrades")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SupportedSince")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Volume")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VolumeBLOCK")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VolumeBTC")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VolumeUSD")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("DXStats.Domain.Entity.Trade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FeeTxId")
                        .HasColumnType("TEXT");

                    b.Property<string>("MakerId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MakerSize")
                        .HasColumnType("TEXT");

                    b.Property<string>("NodePubKey")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceBLOCK")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceBTC")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceUSD")
                        .HasColumnType("TEXT");

                    b.Property<string>("TakerId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TakerSize")
                        .HasColumnType("TEXT");

                    b.Property<long>("Timestamp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TradeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MakerId");

                    b.HasIndex("TakerId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("DXStats.Domain.Entity.Trade", b =>
                {
                    b.HasOne("DXStats.Domain.Entity.Coin", "Maker")
                        .WithMany()
                        .HasForeignKey("MakerId");

                    b.HasOne("DXStats.Domain.Entity.Coin", "Taker")
                        .WithMany()
                        .HasForeignKey("TakerId");
                });
#pragma warning restore 612, 618
        }
    }
}
